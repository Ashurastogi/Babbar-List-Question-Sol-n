public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int v, vector<int> adj[]) {
        int i;
        int vis[v];
        
        for(i=0;i<v;i++){
            if(vis[i]==0){
                if(solve(i,adj, vis))
                    return true;
            }
        }
        
        return false;
    }
    
    bool solve(int i, vector<int> adj[],int *vis){
        queue<pair<int,int>> q;
        
        vis[i] = 1;
        q.push({i,-1});
        
        while(!q.empty()){
            int n = q.front().first;
            int p = q.front().second;
            
            q.pop();
            for(auto it:adj[n]){
                if(!vis[it]){
                    vis[it] = 1;
                    q.push({it, n});
                }
                else if(p!=it)
                    return true;
            }
        }
        return false;
        
    }
