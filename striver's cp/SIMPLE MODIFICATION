/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		InputStreamReader r=new InputStreamReader(System.in);    
        BufferedReader br=new BufferedReader(r);  
		
		String s = br.readLine();
		String c[] = s.split(" ");
		int n = Integer.parseInt(c[0]);
		int m = Integer.parseInt(c[1]);
		int u = Integer.parseInt(c[2]);
		int q = Integer.parseInt(c[3]);
		
		long [][]t = new long[n+1][m+1];
		int [][]pre = new int[n+1][m+2];
		int i,j,o;
		
		for(i=1;i<=n;i++){
		    s = br.readLine();
		    String ce[] = s.split(" ");
		    for(j=1;j<=m;j++)
		        t[i][j] =  Long.parseLong(ce[j-1]);
		}
		
		
		
		for(i=0;i<u;i++){
		    s = br.readLine();
		    String cee[] = s.split(" ");
		    
		    int k = Integer.parseInt(cee[0]);
		    int r1 = Integer.parseInt(cee[1])+1;
		    int c1 = Integer.parseInt(cee[2])+1;
		    int r2 = Integer.parseInt(cee[3])+1;
		    int c2 = Integer.parseInt(cee[4])+1;
		    
		    for(j=r1;j<=r2;j++){
		        pre[j][c1]+=k;
		        pre[j][c2+1]-=k;
		    }
		}
		
		for(j=1;j<=n;j++){
		    for(o=1;o<=m;o++){
		        
		        pre[j][o] += pre[j][o-1];
		        t[j][o] += pre[j][o];
		        
		    }
		         
		}
		
		/*for(j=0;j<=n;j++){
		    for(o=0;o<=m;o++){
		        
		            
		        System.out.print(t[j][o]+" ");
		    }
		     System.out.println();       
		}*/
		
		
		for(j=1;j<=n;j++){
		    for(o=1;o<=m;o++){
		        
		        t[j][o] = t[j][o]+t[j-1][o]+t[j][o-1]-t[j-1][o-1];
		        //System.out.print(t[j][o]+" ");
		    }
		     //System.out.println();       
		}
		
		
		for(i=0;i<q;i++){
		    s = br.readLine();
		    String ceee[] = s.split(" ");

		    int r1 = Integer.parseInt(ceee[0])+1;
		    int c1 = Integer.parseInt(ceee[1])+1;
		    int r2 = Integer.parseInt(ceee[2])+1;
		    int c2 = Integer.parseInt(ceee[3])+1;
		    
		    long res = t[r2][c2] - t[r1-1][c2] - t[r2][c1-1] + t[r1-1][c1-1];
		    
		    System.out.println(res);
		}
	}
	
	static long coeff(int n, int k){    // nCr combination
    
        long res = 1;
 
        // Since C(n, k) = C(n, n-k)
        if (k > n - k)
            k = n - k;
 
        // Calculate value of
        // [n * (n-1) *---* (n-k+1)] / [k * (k-1) *----* 1]
        for (int i = 0; i < k; ++i) {
            res *= (n - i);
            res /= (i + 1);
        }
 
        return res;
    }
}
