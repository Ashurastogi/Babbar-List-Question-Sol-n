class Solution {
public:
    int res = -1;
    int longestPath(vector<vector<int>> mat, int xs, int ys, int xd, int yd)
    {
        int n = mat.size();
        int m =  mat[0].size();
        
        int  x[] = {0,0,1,-1};
        int y[] = {1,-1,0,0};
        
        if(mat[xs][ys]==0)
            return -1;
            
        mat[xs][ys] = 0;
        solve(0,mat,xs,ys,xd,yd,x,y,n,m);
        return res;
    }
    
    void solve(int r,vector<vector<int>> &mat, int xs, int ys, int xd, int yd, int x[], int y[],int n, int m){
        
        if(xs==xd && ys==yd){
            res = max(res,r);
            
            return;
        }    
        
        for(int i=0;i<4;i++){
            int a = xs+x[i];
            int b = ys+y[i];
            
            if(a<0 || b<0 || a>=n || b>=m || mat[a][b]==0)
                continue;
                
            mat[a][b] = 0;
            solve(r+1,mat,a,b,xd,yd,x,y,n,m);
            mat[a][b] = 1;
        }
    }
};
