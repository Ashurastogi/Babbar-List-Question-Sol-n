class Solution
{
    int find_min(int n,vector<int> k,vector<bool> mst){
        int i,min = -1;
        
        int max = INT_MAX;
        for(i=0;i<n;i++){
            if(mst[i]==false && max>k[i]){
                max = k[i];
                min = i;
            }        
        }
        
        return min; 
    }
    
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int v, vector<vector<int>> adj[])
    {
        vector<int> k(v,INT_MAX);
        vector<bool> mst(v,false);
        vector<int> par(v,-1);
        
        k[0] = 0;
        
        int i,min,res = 0;;
        for(i=0;i<v;i++){
            min = find_min(v,k,mst);
            
            mst[min] = true;
            res += k[min];
            for(auto d:adj[min]){
                if(mst[d[0]]==false && k[d[0]]>d[1]){
                    k[d[0]] = d[1];
                    par[d[0]] = min;
                }
            }
        }
        
        return res;
        
    }
};
