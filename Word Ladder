class Solution {
public:
    int ladderLength(string b, string e, vector<string>& w) {
        int i,j;
        unordered_set<string> s;
        
        queue<string> q;
        int depth = 0;
        int size = 0;
        
        int flag = 0;
        for(i=0;i<w.size();i++){
            if(w[i]==e)
                flag=1;
            s.insert(w[i]);
        }
        if(flag==0)
            return 0;
        
        q.push(b);
        
        while(!q.empty()){
            depth++;
            size = q.size();
            
            while(size!=0){
                string tem = q.front();
                q.pop();
                size--;
                for(i=0;i<tem.size();i++){
                    string t = tem;
                    for(char a = 'a';a<='z';a++){
                        if(a==tem[i])
                            continue;
                        
                        t[i] = a;
                        if(s.find(t)!=s.end()){
                            
                            if(t==e)
                                return depth+1;
                            
                            q.push(t);
                            s.erase(t);
                        }
                    }
                }
            }
        }
        
        return 0;
    }
};
