int numIslands(vector<vector<char>>& grid) {
        int res = 0;
        int n = grid.size();
        int m = grid[0].size();
        
        int i,j;
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                
                if(grid[i][j] =='1'){
                    res++;
                    solve(i,j,n,m,grid);
                }
            }
        }
        
        return res;
    }
    
    
    void solve(int i,int j,int n,int m,vector<vector<char>>& grid){
        grid[i][j] = '2';
        
        if(i-1>=0 && grid[i-1][j]=='1')
            solve(i-1,j,n,m,grid);
            
        if(i+1<n && grid[i+1][j]=='1')
            solve(i+1,j,n,m,grid);
            
        if(j-1>=0 && grid[i][j-1]=='1')
            solve(i,j-1,n,m,grid);
            
        if(j+1<m && grid[i][j+1]=='1')
            solve(i,j+1,n,m,grid);
            
            
        if(i+1<n && j+1<m && grid[i+1][j+1]=='1')
            solve(i+1,j+1,n,m,grid);
            
        if(i+1<n && j-1>=0 && grid[i+1][j-1]=='1')
            solve(i+1,j-1,n,m,grid);
            
        if(i-1>=0 && j+1<m && grid[i-1][j+1]=='1')
            solve(i-1,j+1,n,m,grid);
            
        if(i-1>=0 && j-1>=0 && grid[i-1][j-1]=='1')
            solve(i-1,j-1,n,m,grid);
    }
