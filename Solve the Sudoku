public:
    //Function to find a solved Sudoku. 
    
    bool solve(int i, int j, int grid[N][N], int k){
        for(int l=0;l<9;l++){
            if(grid[i][l]==k)
                return false;
        
            if(grid[l][j]==k)
                return false;
                
            if(grid[3*(i/3)+l/3][3*(j/3)+l%3]==k)
                return false;
        }
        
        return true;
    }
    
    bool SolveSudoku(int grid[N][N])  
    { 
        int i,j,k;
        
        for(i=0;i<9;i++){
            for(j=0;j<9;j++){
                
                if(grid[i][j]==0){
                    
                    for(k=1;k<=9;k++){
                        //cout<<i<<" "<<j<<"  "<<k<<"\n";    
                        if(solve(i,j,grid,k)==true){
                            grid[i][j] = k;
                        
                            if(SolveSudoku(grid)==true)
                                return true;
                            else
                                grid[i][j] = 0;
                        }
                            
                    }   
                    return false;
                }
            }
        }
        
        return true;
    }
    
    
    
    //Function to print grids of the Sudoku.
    void printGrid (int grid[N][N]) 
    {
        int i,j;
        
        for(i=0;i<N;i++){
            for(j=0;j<N;j++){
                cout<<grid[i][j]<<" ";
            }
        }
    }
