	static int findLongestConseqSubseq(int arr[], int n)
	{
	    HashSet<Integer> hs = new HashSet<>();
	    int i;
	    int res = 1;
	    int max = 1;
	    for(i=0;i<n;i++){
	        hs.add(arr[i]);

	    }
	    int t;
	    for(i=0;i<n;i++){
	        
	        if(!hs.contains(arr[i]-1)){
	            
	            t =  arr[i]+1;
	            max = 1;
	            while(hs.contains(t)){
	                max++;
	                t++;
	            }
	            
	            if(res<max)
	                res = max;
	                
	               
	        }

	    }
	    
	    return res;
	}
  
  
                            // SECOND SOLUTION          ---------------------------------------------------------
                            
                            
                            
  static int findLongestConseqSubseq(int arr[], int n)
	{
	    int []hs = new int[100001];
	    int i;
	    int res = 1;
	    int max = 0;
	    for(i=0;i<n;i++){
	        hs[arr[i]]++;

	    }

	    for(i=0;i<100001;i++){
	        
	        if(hs[i]>0)
	            max++;
	        else
	            max= 0;
	       
	            
	            if(res<max)
	                res = max;
	                
	               
	        

	    }
	    
	    return res;
	}
  
  
  
